#!/bin/bash

project=blank
license=MIT
platform=
docs=docs
name=
update=

for arg in "$@"; do
	case "$arg" in

	--name=*)
        name=`echo $arg | sed 's/--name=//'`
    ;;

	--project=*)
        project=`echo $arg | sed 's/--project=//'`
    ;;

	--license=*)
        license=`echo $arg | sed 's/--license=//'`
    ;;

	--platform=*)
        platform=`echo $arg | sed 's/--platform=//'`
    ;;

	--update*)
		update=`echo true | sed 's/--update//'`
	;;

	--help)
        echo 'usage: ./generator [options]'
        echo ''
        echo 'options:'
        echo '  --name=<name>: name of project'
        echo '  --project=<project>: target project (blank, html, php-library, sylius-plugin)'
		echo '  --license=<license>: license (AGPLv3, EUPLv1.2, GPLv3, MIT)'
		echo '  --platform=<platform>: platform (gitlab, github)'
		echo '  --update'
        echo ''
        echo 'All invalid options are silently ignored!'
        exit 0
    ;;

	esac
done

if [ ! $(command -v jq) &> /dev/null ]; then
	echo "jq must be present on your system"
	exit 0
fi

if [ $update ]; then
	data=$(cat ./templates.json)

	for k in $(jq -c '.templates[]' <<< $data); do
		rm -Rf ./templates/projects/$(echo $k | jq -r '.name' )
		git clone --branch $(echo $k | jq -r '.branch' ) --depth 1 $(echo $k | jq -r '.url' ) ./templates/projects/$(echo $k | jq -r '.name' )
		rm -Rf ./templates/projects/$(echo $k | jq -r '.name' )/.git
	done
fi

if [ -z $name ]; then
	echo "You must specify name option"
	exit 0
fi

if [ -d ./generated/$name ]; then
	echo "Directory already exist"
	exit 0
fi

echo "Generating project $name..."

cp -rT ./templates/default/ ./generated/$name

if [ $project != "blank" ]; then
	if [ -d ./templates/configure/$project/ ]; then
		cp -rT ./templates/configure/$project/ ./generated/$name
	fi

	if [ -d ./templates/projects/$project/ ]; then
		cp -rT ./templates/projects/$project/ ./generated/$name
	fi
fi

echo "Add license $license..."
cp ./templates/LICENSE/$license ./generated/$name/LICENSE

documentation=./generated/$name/$docs

if [ ! -z $platform ]; then
	docs=.$platform
	documentation=./generated/$name/$docs

	if [ -d ./templates/CI/$project/$platform/ ]; then
		cp -rT ./templates/CI/$project/$platform/ $documentation
	fi
fi

cp -rT ./templates/docs/ $documentation

echo "Replace content in files.."

sed -i "s/{name}/$name/g" ./generated/$name/README.md
sed -i "s/{license}/$license/g" ./generated/$name/README.md
sed -i "s/{license}/$license/g" $documentation/CONTRIBUTING.md
sed -i "s/{docs.path}/$docs/g" ./generated/$name/README.md

if [ -f "./data.json" ]; then
	data=$(cat ./data.json)

	sed -i "s/{author.name}/$(echo $data | jq -r '.author.name')/g" ./generated/$name/README.md
	sed -i "s,{author.website},$(echo $data | jq -r '.author.website' ),g" ./generated/$name/README.md
	sed -i "s,{author.email},$(echo $data | jq -r '.author.email' ),g" $documentation/CODE_OF_CONDUCT.md

	counter=2

	for k in $(jq -c '.support[]' <<< $data); do
	    sed -i "$(awk "/^Is it possible to contact us by/{ print NR + $counter; exit }" $documentation/SUPPORT.md)s,.*,- [$(echo $k | jq -r '.name' )]($(echo $k | jq -r '.url' ))\\n," $documentation/SUPPORT.md
		counter=$((counter + 1))
	done

	if [ $project = "html" ]; then
		sed -i "s/{name}/$name/g" ./generated/$name/infrastructure/docker/autoconf/Makefile.dist
	fi

	if [ $project = "php-library" ]; then
		sed -i "s,{php.name},$(echo $data | jq -r '.php.name'),g" ./generated/$name/composer.json
		sed -i "s,{php.description},$(echo $data | jq -r '.php.description'),g" ./generated/$name/composer.json
		sed -i "s,{php.type},$(echo $data | jq -r '.php.type'),g" ./generated/$name/composer.json
		sed -i "s,{license},$license,g" ./generated/$name/composer.json
		sed -i "s,{author.name},$(echo $data | jq -r '.author.name'),g" ./generated/$name/composer.json
		sed -i "s,{author.email},$(echo $data | jq -r '.author.email'),g" ./generated/$name/composer.json
		sed -i "s,{php.psr4},$(echo $data | jq -r '.php.psr4'| sed 's/\\/\\\\\\\\/g'),g" ./generated/$name/composer.json
	fi

else
	echo ""
	echo "⚠️⚠️⚠️ If you want to pimp your documentation files, copy data.json.dist to data.json and add changes your data!"
	echo ""
fi

echo "Configuration complete"
